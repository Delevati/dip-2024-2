Execute as seguintes atividades para as imagens "../img/":

chips.png
lena.png
rgb.png
rgbcube_kBKG.png
flowers.jpg
hsv_disk.png
monkey.jpeg
strawberries.tif

---

1. Display Color Histograms for RGB Images

Objective: Calculate and display separate histograms for the R, G, and B channels of a color image.

Topics: Color histograms, channel separation.

Challenge: Compare histograms of different images (e.g., nature vs. synthetic images).



---

2. Visualize Individual Color Channels

Objective: Extract and display the Red, Green, and Blue channels of a color image as grayscale and pseudo-colored images.

Topics: Channel separation and visualization.

Bonus: Reconstruct the original image using the separated channels.



---

3. Convert Between Color Spaces (RGB ↔ HSV, LAB, YCrCb, CMYK)

Objective: Convert an RGB image to other color spaces and display the result.

Topics: Color space conversion.

Challenge: Display individual channels from each converted space.



---

4. Compare Effects of Blurring in RGB vs HSV

Objective: Apply Gaussian blur in both RGB and HSV color spaces and compare results.

Topics: Color space effect on filtering.

Discussion: Why HSV might preserve color better in some operations.



---

5. Apply Edge Detection Filters (Sobel, Laplacian) on Color Images

Objective: Apply Sobel and Laplacian filters on individual channels and on the grayscale version of the image.

Topics: Edge detection, spatial filtering.

Bonus: Merge edge maps from all channels to form a combined result.



---

6. High-pass and Low-pass Filtering in the Frequency Domain

Objective: Perform DFT on each channel of a color image, apply high-pass and low-pass masks, then reconstruct the image.

Topics: Frequency domain filtering, Fourier Transform.

Tools: cv2.dft(), cv2.idft(), numpy.fft.



---

7. Visualize and Manipulate Bit Planes of Color Images

Objective: Extract bit planes (especially MSB and LSB) from each color channel and display them.

Topics: Bit slicing, data visualization.

Challenge: Reconstruct the image using only the top 4 bits of each channel.



---

8. Color-based Object Segmentation using HSV Thresholding

Objective: Convert image to HSV, apply thresholding to extract objects of a certain color (e.g., red apples).

Topics: Color segmentation, HSV masking.

Bonus: Use trackbars to adjust thresholds dynamically.



---

9. Convert and Visualize Images in the NTSC (YIQ) Color Space

Objective: Manually convert an RGB image to NTSC (YIQ) and visualize the Y, I, and Q channels.

Topics: Color space math, visualization.

Note: OpenCV doesn’t support YIQ directly, so students can implement the conversion using matrices.



---

10. Color Image Enhancement with Histogram Equalization

Objective: Apply histogram equalization on individual channels in different color spaces (e.g., Y in YCrCb, L in LAB).

Topics: Contrast enhancement, color models.

Discussion: Explain why histogram equalization should not be directly applied to RGB.